<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="104" passed="86" failed="18" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-17T14:51:14 IST" name="Suite" finished-at="2025-01-17T15:26:01 IST" duration-ms="2086837">
    <groups>
      <group name="cucumber">
        <method signature="CutomizeTestNGCucmberRunner.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" name="runScenario" class="Base.CutomizeTestNGCucmberRunner"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2025-01-17T14:51:14 IST" name="Test" finished-at="2025-01-17T15:26:01 IST" duration-ms="2086837">
      <class name="Runner.testRunner">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:51:14 IST" name="setUpClass" finished-at="2025-01-17T14:51:15 IST" duration-ms="1142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:51:15 IST" name="CreateDriver" finished-at="2025-01-17T14:51:18 IST" duration-ms="3209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:51:18 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:51:30 IST" duration-ms="12098" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add App Banner Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["App Banner Module Operations in Content Management Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:51:30 IST" name="afterSuite" finished-at="2025-01-17T14:51:30 IST" duration-ms="217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:51:30 IST" name="CreateDriver" finished-at="2025-01-17T14:51:33 IST" duration-ms="2200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:51:33 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:51:53 IST" duration-ms="20399" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["View App Banner Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["App Banner Module Operations in Content Management Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:51:53 IST" name="afterSuite" finished-at="2025-01-17T14:51:53 IST" duration-ms="255" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:51:53 IST" name="CreateDriver" finished-at="2025-01-17T14:51:55 IST" duration-ms="1862" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:51:55 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:52:07 IST" duration-ms="11922" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Update App Banner Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["App Banner Module Operations in Content Management Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:52:07 IST" name="afterSuite" finished-at="2025-01-17T14:52:07 IST" duration-ms="183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:52:07 IST" name="CreateDriver" finished-at="2025-01-17T14:52:10 IST" duration-ms="2479" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:52:10 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:52:27 IST" duration-ms="16794" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Filter App Banner Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["App Banner Module Operations in Content Management Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:52:27 IST" name="afterSuite" finished-at="2025-01-17T14:52:27 IST" duration-ms="218" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:52:27 IST" name="CreateDriver" finished-at="2025-01-17T14:52:29 IST" duration-ms="1773" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:52:29 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:52:46 IST" duration-ms="16994" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["View CMS Page Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["CMS Page Module Operations in Content Management Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:52:46 IST" name="afterSuite" finished-at="2025-01-17T14:52:46 IST" duration-ms="224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:52:46 IST" name="CreateDriver" finished-at="2025-01-17T14:52:48 IST" duration-ms="1851" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:52:48 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:52:55 IST" duration-ms="7638" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Update CMS Page Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["CMS Page Module Operations in Content Management Module"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'User click on Update CMS Page button' and 2 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("User click on Update CMS Page button")
public void user_click_on_update_cms_page_button() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("User update title of the CMS Page")
public void user_update_title_of_the_cms_page() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("User click on update CMS Page button")
public void user_click_on_update_cms_page_button() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'User click on Update CMS Page button' and 2 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("User click on Update CMS Page button")
public void user_click_on_update_cms_page_button() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("User update title of the CMS Page")
public void user_update_title_of_the_cms_page() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("User click on update CMS Page button")
public void user_click_on_update_cms_page_button() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:136)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:132)
at Base.CutomizeTestNGCucmberRunner.runScenario(CutomizeTestNGCucmberRunner.java:25)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:52:55 IST" name="afterSuite" finished-at="2025-01-17T14:52:55 IST" duration-ms="184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:52:55 IST" name="CreateDriver" finished-at="2025-01-17T14:52:58 IST" duration-ms="2184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:52:58 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:53:10 IST" duration-ms="12746" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add Promo Banner Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Promo Banner Module Operations in Content Management Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:53:10 IST" name="afterSuite" finished-at="2025-01-17T14:53:12 IST" duration-ms="1995" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:53:12 IST" name="CreateDriver" finished-at="2025-01-17T14:53:14 IST" duration-ms="1841" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:53:14 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:53:31 IST" duration-ms="16540" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["View Promo Banner Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Promo Banner Module Operations in Content Management Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:53:31 IST" name="afterSuite" finished-at="2025-01-17T14:53:31 IST" duration-ms="240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:53:31 IST" name="CreateDriver" finished-at="2025-01-17T14:53:33 IST" duration-ms="1918" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:53:33 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:53:46 IST" duration-ms="12742" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Update Promo Banner Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Promo Banner Module Operations in Content Management Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:53:46 IST" name="afterSuite" finished-at="2025-01-17T14:53:47 IST" duration-ms="1135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:53:47 IST" name="CreateDriver" finished-at="2025-01-17T14:53:49 IST" duration-ms="2613" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:53:49 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:54:08 IST" duration-ms="18419" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Filter Promo Banner Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Promo Banner Module Operations in Content Management Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:54:08 IST" name="afterSuite" finished-at="2025-01-17T14:54:08 IST" duration-ms="341" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:54:08 IST" name="CreateDriver" finished-at="2025-01-17T14:54:10 IST" duration-ms="2098" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:54:10 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:54:52 IST" duration-ms="41826" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add Contest Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Contests Module Operations in DFS Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:54:52 IST" name="afterSuite" finished-at="2025-01-17T14:54:52 IST" duration-ms="196" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:54:52 IST" name="CreateDriver" finished-at="2025-01-17T14:54:54 IST" duration-ms="1806" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:54:54 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:55:02 IST" duration-ms="7890" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["View Contest Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Contests Module Operations in DFS Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:55:02 IST" name="afterSuite" finished-at="2025-01-17T14:55:02 IST" duration-ms="171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:55:02 IST" name="CreateDriver" finished-at="2025-01-17T14:55:04 IST" duration-ms="1965" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:55:04 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:55:13 IST" duration-ms="8662" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Update Contests Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Contests Module Operations in DFS Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:55:13 IST" name="afterSuite" finished-at="2025-01-17T14:55:13 IST" duration-ms="145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:55:13 IST" name="CreateDriver" finished-at="2025-01-17T14:55:15 IST" duration-ms="1835" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:55:15 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:55:22 IST" duration-ms="7696" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Filter Contests Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Contests Module Operations in DFS Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:55:22 IST" name="afterSuite" finished-at="2025-01-17T14:55:23 IST" duration-ms="197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:55:23 IST" name="CreateDriver" finished-at="2025-01-17T14:55:25 IST" duration-ms="2136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:55:25 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:55:34 IST" duration-ms="9027" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Filter Contests Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Contests Module Operations in DFS Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:55:34 IST" name="afterSuite" finished-at="2025-01-17T14:55:34 IST" duration-ms="195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:55:34 IST" name="CreateDriver" finished-at="2025-01-17T14:55:36 IST" duration-ms="1779" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:55:36 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:55:53 IST" duration-ms="17707" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Unpin a contest (ID 1)"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Contests Module Operations in DFS Module"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"#\31 "}
  (Session info: chrome=131.0.6778.266)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.26.0', revision: '8ccf0219d7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2083a2fb851a103ab1b1d8ab4ffa598f, findElement {using=id, value=1}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.266, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\WINDOWS\TEMP\scoped_dir3...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:64896}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:64896/devtoo..., se:cdpVersion: 131.0.6778.266, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 2083a2fb851a103ab1b1d8ab4ffa598f]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#\31 "}
  (Session info: chrome=131.0.6778.266)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.26.0', revision: '8ccf0219d7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2083a2fb851a103ab1b1d8ab4ffa598f, findElement {using=id, value=1}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.266, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\WINDOWS\TEMP\scoped_dir3...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:64896}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:64896/devtoo..., se:cdpVersion: 131.0.6778.266, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 2083a2fb851a103ab1b1d8ab4ffa598f
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy33.click(Unknown Source)
at Pages.DFS.ContestDashboardPage.clickPinButton(ContestDashboardPage.java:77)
at stepDefinitions.DFS.ContestDashboardSteps.user_clicks_on_pin_contest_which_has_id(ContestDashboardSteps.java:51)
at ✽.User clicks on UnPin contest which has id 1(file:///D:/automation/practice/src/test/resources/features/DFS/ContestDashboard.feature:16)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:55:53 IST" name="afterSuite" finished-at="2025-01-17T14:55:54 IST" duration-ms="216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:55:54 IST" name="CreateDriver" finished-at="2025-01-17T14:55:55 IST" duration-ms="1676" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:55:55 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:56:20 IST" duration-ms="24306" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Pin a contest (ID 0)"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Contests Module Operations in DFS Module"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//p[.="Pinned Successfully!"]"}
  (Session info: chrome=131.0.6778.266)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.26.0', revision: '8ccf0219d7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [b5f80c92be037152cab26b0a018070a0, findElement {using=xpath, value=//p[.="Pinned Successfully!"]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.266, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\WINDOWS\TEMP\scoped_dir1...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:64928}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:64928/devtoo..., se:cdpVersion: 131.0.6778.266, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b5f80c92be037152cab26b0a018070a0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[.="Pinned Successfully!"]"}
  (Session info: chrome=131.0.6778.266)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.26.0', revision: '8ccf0219d7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [b5f80c92be037152cab26b0a018070a0, findElement {using=xpath, value=//p[.="Pinned Successfully!"]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.266, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\WINDOWS\TEMP\scoped_dir1...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:64928}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:64928/devtoo..., se:cdpVersion: 131.0.6778.266, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b5f80c92be037152cab26b0a018070a0
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy33.getText(Unknown Source)
at Pages.DFS.ContestDashboardPage.clickPinButton(ContestDashboardPage.java:83)
at stepDefinitions.DFS.ContestDashboardSteps.user_clicks_on_pin_contest_which_has_zero_id(ContestDashboardSteps.java:76)
at ✽.User clicks on Pin contest which has id 0(file:///D:/automation/practice/src/test/resources/features/DFS/ContestDashboard.feature:21)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:56:20 IST" name="afterSuite" finished-at="2025-01-17T14:56:20 IST" duration-ms="225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:56:20 IST" name="CreateDriver" finished-at="2025-01-17T14:56:22 IST" duration-ms="1931" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:56:22 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:56:30 IST" duration-ms="8204" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add Contest Group Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Contest Group Group Module Operations in DFS Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:56:30 IST" name="afterSuite" finished-at="2025-01-17T14:56:30 IST" duration-ms="143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:56:30 IST" name="CreateDriver" finished-at="2025-01-17T14:56:32 IST" duration-ms="1770" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:56:32 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:56:40 IST" duration-ms="7748" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["View Contest Group Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Contest Group Group Module Operations in DFS Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:56:40 IST" name="afterSuite" finished-at="2025-01-17T14:56:40 IST" duration-ms="201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:56:40 IST" name="CreateDriver" finished-at="2025-01-17T14:56:42 IST" duration-ms="1749" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:56:42 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:56:49 IST" duration-ms="7782" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Update Contest Group Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Contest Group Group Module Operations in DFS Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:56:49 IST" name="afterSuite" finished-at="2025-01-17T14:56:50 IST" duration-ms="140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:56:50 IST" name="CreateDriver" finished-at="2025-01-17T14:56:52 IST" duration-ms="2080" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:56:52 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:56:59 IST" duration-ms="6990" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Filter Contest Group Group Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Contest Group Group Module Operations in DFS Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:56:59 IST" name="afterSuite" finished-at="2025-01-17T14:56:59 IST" duration-ms="177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:56:59 IST" name="CreateDriver" finished-at="2025-01-17T14:57:01 IST" duration-ms="2085" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:57:01 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:57:09 IST" duration-ms="7684" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["View League Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["League Module Operations in DFS Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:57:09 IST" name="afterSuite" finished-at="2025-01-17T14:57:09 IST" duration-ms="168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:57:09 IST" name="CreateDriver" finished-at="2025-01-17T14:57:11 IST" duration-ms="2397" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:57:11 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:57:19 IST" duration-ms="7878" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Update League Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["League Module Operations in DFS Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:57:19 IST" name="afterSuite" finished-at="2025-01-17T14:57:19 IST" duration-ms="195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:57:19 IST" name="CreateDriver" finished-at="2025-01-17T14:57:21 IST" duration-ms="1794" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:57:21 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:57:28 IST" duration-ms="7192" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Filter League Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["League Module Operations in DFS Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:57:28 IST" name="afterSuite" finished-at="2025-01-17T14:57:28 IST" duration-ms="185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:57:28 IST" name="CreateDriver" finished-at="2025-01-17T14:57:30 IST" duration-ms="1851" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:57:30 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:57:38 IST" duration-ms="7609" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["View Players Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Players Module Operations in DFS Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:57:38 IST" name="afterSuite" finished-at="2025-01-17T14:57:38 IST" duration-ms="218" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:57:38 IST" name="CreateDriver" finished-at="2025-01-17T14:57:40 IST" duration-ms="1892" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:57:40 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:57:48 IST" duration-ms="7906" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Update Players Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Players Module Operations in DFS Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:57:48 IST" name="afterSuite" finished-at="2025-01-17T14:57:48 IST" duration-ms="189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:57:48 IST" name="CreateDriver" finished-at="2025-01-17T14:57:50 IST" duration-ms="1866" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:57:50 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:57:58 IST" duration-ms="7862" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Filter Players Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Players Module Operations in DFS Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:57:58 IST" name="afterSuite" finished-at="2025-01-17T14:57:58 IST" duration-ms="146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:57:58 IST" name="CreateDriver" finished-at="2025-01-17T14:58:00 IST" duration-ms="1803" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:58:00 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:58:10 IST" duration-ms="10137" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["View Teams Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Teams Module Operations in DFS Module"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: stale element not found in the current frame
  (Session info: chrome=131.0.6778.266)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Build info: version: '4.26.0', revision: '8ccf0219d7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [381179c99dee65d00590333a550e7b78, clickElement {id=f.DBDF7BFE3835FC7E3BA866E1E200B1BE.d.220B5EEE26DCF2DDB64DA9F20456C426.e.120}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.266, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\WINDOWS\TEMP\scoped_dir1...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:65259}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:65259/devtoo..., se:cdpVersion: 131.0.6778.266, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (381179c99dee65d00590333a550e7b78)] -> xpath: (//i[@class="fa fa-eye"])[1]]
Session ID: 381179c99dee65d00590333a550e7b78]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: stale element not found in the current frame
  (Session info: chrome=131.0.6778.266)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Build info: version: '4.26.0', revision: '8ccf0219d7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [381179c99dee65d00590333a550e7b78, clickElement {id=f.DBDF7BFE3835FC7E3BA866E1E200B1BE.d.220B5EEE26DCF2DDB64DA9F20456C426.e.120}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.266, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\WINDOWS\TEMP\scoped_dir1...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:65259}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:65259/devtoo..., se:cdpVersion: 131.0.6778.266, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (381179c99dee65d00590333a550e7b78)] -> xpath: (//i[@class="fa fa-eye"])[1]]
Session ID: 381179c99dee65d00590333a550e7b78
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:76)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy33.click(Unknown Source)
at Pages.DFS.TeamsPage.clickViewTeam(TeamsPage.java:27)
at stepDefinitions.DFS.TeamsSteps.user_click_on_view_teams_button(TeamsSteps.java:29)
at ✽.User click on View Teams button(file:///D:/automation/practice/src/test/resources/features/DFS/Teams.feature:10)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:58:10 IST" name="afterSuite" finished-at="2025-01-17T14:58:10 IST" duration-ms="591" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:58:10 IST" name="CreateDriver" finished-at="2025-01-17T14:58:12 IST" duration-ms="1989" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:58:12 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:58:22 IST" duration-ms="9512" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Update Teams Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Teams Module Operations in DFS Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:58:22 IST" name="afterSuite" finished-at="2025-01-17T14:58:22 IST" duration-ms="435" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:58:22 IST" name="CreateDriver" finished-at="2025-01-17T14:58:25 IST" duration-ms="2309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:58:25 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:58:34 IST" duration-ms="9576" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Filter Teams Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Teams Module Operations in DFS Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:58:34 IST" name="afterSuite" finished-at="2025-01-17T14:58:35 IST" duration-ms="364" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:58:35 IST" name="CreateDriver" finished-at="2025-01-17T14:58:37 IST" duration-ms="2599" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:58:37 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:58:43 IST" duration-ms="5799" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Registered User Count"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Dashboard Module Operations"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:58:43 IST" name="afterSuite" finished-at="2025-01-17T14:58:43 IST" duration-ms="226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:58:43 IST" name="CreateDriver" finished-at="2025-01-17T14:58:45 IST" duration-ms="2128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:58:45 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:58:51 IST" duration-ms="5219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Active Users Count"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Dashboard Module Operations"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:58:51 IST" name="afterSuite" finished-at="2025-01-17T14:58:51 IST" duration-ms="240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:58:51 IST" name="CreateDriver" finished-at="2025-01-17T14:58:54 IST" duration-ms="2602" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:58:54 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:59:01 IST" duration-ms="7518" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Passive Users Count"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Dashboard Module Operations"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:59:01 IST" name="afterSuite" finished-at="2025-01-17T14:59:01 IST" duration-ms="312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:59:01 IST" name="CreateDriver" finished-at="2025-01-17T14:59:04 IST" duration-ms="3152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:59:04 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:59:10 IST" duration-ms="5508" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Amount Deposited Users Count"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Dashboard Module Operations"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:59:10 IST" name="afterSuite" finished-at="2025-01-17T14:59:10 IST" duration-ms="157" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:59:10 IST" name="CreateDriver" finished-at="2025-01-17T14:59:12 IST" duration-ms="1882" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:59:12 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:59:20 IST" duration-ms="8248" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add Financial Category Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Financial Category Module Operations in Finance ERP Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:59:20 IST" name="afterSuite" finished-at="2025-01-17T14:59:20 IST" duration-ms="184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:59:20 IST" name="CreateDriver" finished-at="2025-01-17T14:59:23 IST" duration-ms="2040" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:59:23 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:59:30 IST" duration-ms="7909" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["View Financial Category Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Financial Category Module Operations in Finance ERP Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:59:30 IST" name="afterSuite" finished-at="2025-01-17T14:59:31 IST" duration-ms="184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:59:31 IST" name="CreateDriver" finished-at="2025-01-17T14:59:32 IST" duration-ms="1811" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:59:32 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T14:59:43 IST" duration-ms="10090" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Filter Financial Category Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Financial Category Module Operations in Finance ERP Module"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.InvalidElementStateException">
            <message>
              <![CDATA[invalid element state
  (Session info: chrome=131.0.6778.266)
Build info: version: '4.26.0', revision: '8ccf0219d7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [54459ca55ac84f909c4bf2623757621c, clearElement {id=f.678F9C21BA22B30FA589557B62B44D37.d.4FD0719B77E72B841B3A82BEE3251E24.e.123}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.266, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\WINDOWS\TEMP\scoped_dir1...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:49177}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:49177/devtoo..., se:cdpVersion: 131.0.6778.266, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (54459ca55ac84f909c4bf2623757621c)] -> id: listing-filter-toggle]
Session ID: 54459ca55ac84f909c4bf2623757621c]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidElementStateException: invalid element state
  (Session info: chrome=131.0.6778.266)
Build info: version: '4.26.0', revision: '8ccf0219d7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [54459ca55ac84f909c4bf2623757621c, clearElement {id=f.678F9C21BA22B30FA589557B62B44D37.d.4FD0719B77E72B841B3A82BEE3251E24.e.123}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.266, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\WINDOWS\TEMP\scoped_dir1...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:49177}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:49177/devtoo..., se:cdpVersion: 131.0.6778.266, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (54459ca55ac84f909c4bf2623757621c)] -> id: listing-filter-toggle]
Session ID: 54459ca55ac84f909c4bf2623757621c
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.clear(RemoteWebElement.java:129)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy33.clear(Unknown Source)
at Pages.FinanceERP.FinancialCategoryPage.filterFinancialCatName(FinancialCategoryPage.java:102)
at stepDefinitions.FinanceERP.FinancialCategoryStep.user_enter_title_in_title_financial_category_field(FinancialCategoryStep.java:60)
at ✽.User enter title in Title Financial Category field(file:///D:/automation/practice/src/test/resources/features/FinanceERP/FinancialCategory.feature:23)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidElementStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:59:43 IST" name="afterSuite" finished-at="2025-01-17T14:59:43 IST" duration-ms="166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:59:43 IST" name="CreateDriver" finished-at="2025-01-17T14:59:44 IST" duration-ms="1712" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T14:59:44 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:00:12 IST" duration-ms="27860" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["All devices Details Notification"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Communication campaign Module Operations in Marketing Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:00:12 IST" name="afterSuite" finished-at="2025-01-17T15:00:12 IST" duration-ms="224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:00:12 IST" name="CreateDriver" finished-at="2025-01-17T15:00:14 IST" duration-ms="1810" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:00:14 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:00:27 IST" duration-ms="12244" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login Activity details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Communication campaign Module Operations in Marketing Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:00:27 IST" name="afterSuite" finished-at="2025-01-17T15:00:30 IST" duration-ms="3067" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:00:30 IST" name="CreateDriver" finished-at="2025-01-17T15:00:32 IST" duration-ms="1982" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:00:32 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:00:41 IST" duration-ms="9152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["SignUp Activity"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Communication campaign Module Operations in Marketing Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:00:41 IST" name="afterSuite" finished-at="2025-01-17T15:00:41 IST" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:00:41 IST" name="CreateDriver" finished-at="2025-01-17T15:00:43 IST" duration-ms="1938" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:00:43 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:00:57 IST" duration-ms="13689" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["By Contest Participation actions"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Communication campaign Module Operations in Marketing Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:00:57 IST" name="afterSuite" finished-at="2025-01-17T15:01:14 IST" duration-ms="16977" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:01:14 IST" name="CreateDriver" finished-at="2025-01-17T15:01:16 IST" duration-ms="2532" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:01:16 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:01:37 IST" duration-ms="21354" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add Email Template Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Email Template Module Operations in Marketing Module"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//textarea[@dir="ltr"]"}
  (Session info: chrome=131.0.6778.266)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.26.0', revision: '8ccf0219d7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d085c6594c69bdef1d491454af0aa2a5, findElement {using=xpath, value=//textarea[@dir="ltr"]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.266, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\WINDOWS\TEMP\scoped_dir1...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50244}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50244/devtoo..., se:cdpVersion: 131.0.6778.266, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: d085c6594c69bdef1d491454af0aa2a5]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//textarea[@dir="ltr"]"}
  (Session info: chrome=131.0.6778.266)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.26.0', revision: '8ccf0219d7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d085c6594c69bdef1d491454af0aa2a5, findElement {using=xpath, value=//textarea[@dir="ltr"]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.266, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\WINDOWS\TEMP\scoped_dir1...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50244}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50244/devtoo..., se:cdpVersion: 131.0.6778.266, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: d085c6594c69bdef1d491454af0aa2a5
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy33.sendKeys(Unknown Source)
at Pages.Marketing.EmailTemplatePage.fillFormAddEmailTemplate(EmailTemplatePage.java:69)
at stepDefinitions.Marketing.EmailTemplateSteps.user_fill_all_the_email_template_details(EmailTemplateSteps.java:31)
at ✽.User fill all the Email Template details(file:///D:/automation/practice/src/test/resources/features/Marketing/EmailTemplate.feature:9)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:01:37 IST" name="afterSuite" finished-at="2025-01-17T15:01:38 IST" duration-ms="170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:01:38 IST" name="CreateDriver" finished-at="2025-01-17T15:01:39 IST" duration-ms="1747" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:01:39 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:02:06 IST" duration-ms="26635" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add Notification Template Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Notification Template Module Operations in Marketing Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:02:06 IST" name="afterSuite" finished-at="2025-01-17T15:02:06 IST" duration-ms="231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:02:06 IST" name="CreateDriver" finished-at="2025-01-17T15:02:08 IST" duration-ms="1952" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:02:08 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:02:16 IST" duration-ms="7613" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["View Notification Template Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Notification Template Module Operations in Marketing Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:02:16 IST" name="afterSuite" finished-at="2025-01-17T15:02:16 IST" duration-ms="293" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:02:16 IST" name="CreateDriver" finished-at="2025-01-17T15:02:18 IST" duration-ms="1785" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:02:18 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:02:27 IST" duration-ms="8824" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Update Notification Template Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Notification Template Module Operations in Marketing Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:02:27 IST" name="afterSuite" finished-at="2025-01-17T15:02:27 IST" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:02:27 IST" name="CreateDriver" finished-at="2025-01-17T15:02:29 IST" duration-ms="1817" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:02:29 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:02:36 IST" duration-ms="7495" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Filter Notification Template Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Notification Template Module Operations in Marketing Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:02:36 IST" name="afterSuite" finished-at="2025-01-17T15:02:36 IST" duration-ms="174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:02:36 IST" name="CreateDriver" finished-at="2025-01-17T15:02:38 IST" duration-ms="1984" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:02:38 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:02:47 IST" duration-ms="8473" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add Promo code Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Promo code Module Operations in Marketing Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:02:47 IST" name="afterSuite" finished-at="2025-01-17T15:02:47 IST" duration-ms="155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:02:47 IST" name="CreateDriver" finished-at="2025-01-17T15:02:51 IST" duration-ms="3774" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:02:51 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:03:17 IST" duration-ms="26612" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["View Promo code Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Promo code Module Operations in Marketing Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:03:17 IST" name="afterSuite" finished-at="2025-01-17T15:03:17 IST" duration-ms="169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:03:17 IST" name="CreateDriver" finished-at="2025-01-17T15:03:20 IST" duration-ms="2856" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:03:20 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:03:31 IST" duration-ms="10197" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Update Promo code Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Promo code Module Operations in Marketing Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:03:31 IST" name="afterSuite" finished-at="2025-01-17T15:03:31 IST" duration-ms="167" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:03:31 IST" name="CreateDriver" finished-at="2025-01-17T15:03:33 IST" duration-ms="2189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:03:33 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:03:41 IST" duration-ms="8345" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Filter Promo code Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Promo code Module Operations in Marketing Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:03:41 IST" name="afterSuite" finished-at="2025-01-17T15:03:41 IST" duration-ms="210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:03:41 IST" name="CreateDriver" finished-at="2025-01-17T15:03:43 IST" duration-ms="2029" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:03:43 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:04:17 IST" duration-ms="33999" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add Games Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Games Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:04:17 IST" name="afterSuite" finished-at="2025-01-17T15:04:18 IST" duration-ms="184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:04:18 IST" name="CreateDriver" finished-at="2025-01-17T15:04:19 IST" duration-ms="1810" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:04:19 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:04:41 IST" duration-ms="21171" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add an empty marketing category"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Games Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:04:41 IST" name="afterSuite" finished-at="2025-01-17T15:04:41 IST" duration-ms="173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:04:41 IST" name="CreateDriver" finished-at="2025-01-17T15:04:43 IST" duration-ms="1905" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:04:43 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:04:58 IST" duration-ms="15729" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Cancel adding game"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Games Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:04:58 IST" name="afterSuite" finished-at="2025-01-17T15:05:00 IST" duration-ms="1775" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:05:00 IST" name="CreateDriver" finished-at="2025-01-17T15:05:02 IST" duration-ms="1928" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:05:02 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:05:45 IST" duration-ms="43182" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validation for duplicate Game name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Games Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//p[.="Name already exist."]"}
  (Session info: chrome=131.0.6778.266)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.26.0', revision: '8ccf0219d7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [6bcbbb402efae7af94ebfbe9cbd658cf, findElement {using=xpath, value=//p[.="Name already exist."]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.266, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\WINDOWS\TEMP\scoped_dir1...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50632}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50632/devtoo..., se:cdpVersion: 131.0.6778.266, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 6bcbbb402efae7af94ebfbe9cbd658cf]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[.="Name already exist."]"}
  (Session info: chrome=131.0.6778.266)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.26.0', revision: '8ccf0219d7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [6bcbbb402efae7af94ebfbe9cbd658cf, findElement {using=xpath, value=//p[.="Name already exist."]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.266, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\WINDOWS\TEMP\scoped_dir1...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50632}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50632/devtoo..., se:cdpVersion: 131.0.6778.266, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 6bcbbb402efae7af94ebfbe9cbd658cf
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy33.getText(Unknown Source)
at Pages.Master.GamesPage.addGamesExistsMsg(GamesPage.java:151)
at stepDefinitions.Master.GamesSteps.an_game_name_error_message_should_be_display(GamesSteps.java:327)
at ✽.an Game name error message "Name already exist." should be display(file:///D:/automation/practice/src/test/resources/features/Master/Games.feature:34)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:05:45 IST" name="afterSuite" finished-at="2025-01-17T15:05:46 IST" duration-ms="369" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:05:46 IST" name="CreateDriver" finished-at="2025-01-17T15:05:48 IST" duration-ms="2265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:05:48 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:06:39 IST" duration-ms="50584" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validation for larg MB size image uplad"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Games Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:06:39 IST" name="afterSuite" finished-at="2025-01-17T15:06:39 IST" duration-ms="333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:06:39 IST" name="CreateDriver" finished-at="2025-01-17T15:06:41 IST" duration-ms="2044" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:06:41 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:06:50 IST" duration-ms="8715" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["View Games Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Games Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:06:50 IST" name="afterSuite" finished-at="2025-01-17T15:06:50 IST" duration-ms="319" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:06:50 IST" name="CreateDriver" finished-at="2025-01-17T15:06:52 IST" duration-ms="1888" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:06:52 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:07:05 IST" duration-ms="13325" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Update Games Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Games Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:07:05 IST" name="afterSuite" finished-at="2025-01-17T15:07:07 IST" duration-ms="1895" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:07:07 IST" name="CreateDriver" finished-at="2025-01-17T15:07:10 IST" duration-ms="2643" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:07:10 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:07:19 IST" duration-ms="8935" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Filter Games Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Games Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:07:19 IST" name="afterSuite" finished-at="2025-01-17T15:07:19 IST" duration-ms="263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:07:19 IST" name="CreateDriver" finished-at="2025-01-17T15:07:21 IST" duration-ms="1797" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:07:21 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:07:30 IST" duration-ms="9499" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["View Grade Level Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Grade Level Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:07:30 IST" name="afterSuite" finished-at="2025-01-17T15:07:30 IST" duration-ms="223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:07:30 IST" name="CreateDriver" finished-at="2025-01-17T15:07:33 IST" duration-ms="2432" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:07:33 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:07:43 IST" duration-ms="9695" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Update Grade Level Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Grade Level Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:07:43 IST" name="afterSuite" finished-at="2025-01-17T15:07:44 IST" duration-ms="951" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:07:44 IST" name="CreateDriver" finished-at="2025-01-17T15:07:46 IST" duration-ms="2041" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:07:46 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:08:21 IST" duration-ms="34958" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add MarketingCategory Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["MarketingCategory Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//p[.="Data Added Successfully"]"}
  (Session info: chrome=131.0.6778.266)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.26.0', revision: '8ccf0219d7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2f611ea1699f03259b778511abb4a7cb, findElement {using=xpath, value=//p[.="Data Added Successfully"]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.266, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\WINDOWS\TEMP\scoped_dir1...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50888}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50888/devtoo..., se:cdpVersion: 131.0.6778.266, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 2f611ea1699f03259b778511abb4a7cb]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[.="Data Added Successfully"]"}
  (Session info: chrome=131.0.6778.266)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.26.0', revision: '8ccf0219d7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2f611ea1699f03259b778511abb4a7cb, findElement {using=xpath, value=//p[.="Data Added Successfully"]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.266, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\WINDOWS\TEMP\scoped_dir1...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50888}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50888/devtoo..., se:cdpVersion: 131.0.6778.266, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 2f611ea1699f03259b778511abb4a7cb
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy33.getText(Unknown Source)
at Pages.Master.MarketingCategoryPage.MarketingSuccessMessage(MarketingCategoryPage.java:117)
at stepDefinitions.Master.MarketingCategorySteps.success_Category_message(MarketingCategorySteps.java:239)
at ✽.User should able to see marketing category success message "Data Added Successfully"(file:///D:/automation/practice/src/test/resources/features/Master/MarketingCategory.feature:13)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:08:21 IST" name="afterSuite" finished-at="2025-01-17T15:08:21 IST" duration-ms="232" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:08:21 IST" name="CreateDriver" finished-at="2025-01-17T15:08:24 IST" duration-ms="2732" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:08:24 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:08:43 IST" duration-ms="19000" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add an empty marketing category"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["MarketingCategory Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:08:43 IST" name="afterSuite" finished-at="2025-01-17T15:08:43 IST" duration-ms="250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:08:43 IST" name="CreateDriver" finished-at="2025-01-17T15:08:45 IST" duration-ms="1890" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:08:45 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:09:10 IST" duration-ms="25392" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Cancel adding a marketing category"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["MarketingCategory Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:09:10 IST" name="afterSuite" finished-at="2025-01-17T15:09:10 IST" duration-ms="286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:09:10 IST" name="CreateDriver" finished-at="2025-01-17T15:09:13 IST" duration-ms="2339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:09:13 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:09:28 IST" duration-ms="15469" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validation for duplicate category name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["MarketingCategory Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:09:28 IST" name="afterSuite" finished-at="2025-01-17T15:09:28 IST" duration-ms="302" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:09:28 IST" name="CreateDriver" finished-at="2025-01-17T15:09:30 IST" duration-ms="1708" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:09:30 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:09:53 IST" duration-ms="22450" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Test back button functionality"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["MarketingCategory Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:09:53 IST" name="afterSuite" finished-at="2025-01-17T15:09:53 IST" duration-ms="246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:09:53 IST" name="CreateDriver" finished-at="2025-01-17T15:09:55 IST" duration-ms="1918" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:09:55 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:10:03 IST" duration-ms="7853" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["View MarketingCategory Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["MarketingCategory Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:10:03 IST" name="afterSuite" finished-at="2025-01-17T15:10:03 IST" duration-ms="178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:10:03 IST" name="CreateDriver" finished-at="2025-01-17T15:10:05 IST" duration-ms="1812" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:10:05 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:10:22 IST" duration-ms="17749" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Update MarketingCategory Information"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["MarketingCategory Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//button[.="Submit"]"}
  (Session info: chrome=131.0.6778.266)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.26.0', revision: '8ccf0219d7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [b44027e833d501aac24b2c04401da4fa, findElement {using=xpath, value=//button[.="Submit"]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.266, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\WINDOWS\TEMP\scoped_dir1...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51269}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51269/devtoo..., se:cdpVersion: 131.0.6778.266, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b44027e833d501aac24b2c04401da4fa]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//button[.="Submit"]"}
  (Session info: chrome=131.0.6778.266)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.26.0', revision: '8ccf0219d7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [b44027e833d501aac24b2c04401da4fa, findElement {using=xpath, value=//button[.="Submit"]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.266, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\WINDOWS\TEMP\scoped_dir1...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51269}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51269/devtoo..., se:cdpVersion: 131.0.6778.266, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b44027e833d501aac24b2c04401da4fa
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy33.click(Unknown Source)
at Pages.Master.MarketingCategoryPage.MarketingUpdateMessage(MarketingCategoryPage.java:136)
at stepDefinitions.Master.MarketingCategorySteps.update_category_message(MarketingCategorySteps.java:300)
at ✽.an category update message "Data Updated Successfully" should be display(file:///D:/automation/practice/src/test/resources/features/Master/MarketingCategory.feature:53)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:10:22 IST" name="afterSuite" finished-at="2025-01-17T15:10:23 IST" duration-ms="259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:10:23 IST" name="CreateDriver" finished-at="2025-01-17T15:10:26 IST" duration-ms="3284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:10:26 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:10:37 IST" duration-ms="11517" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Filter operation"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["MarketingCategory Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:10:37 IST" name="afterSuite" finished-at="2025-01-17T15:10:38 IST" duration-ms="158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:10:38 IST" name="CreateDriver" finished-at="2025-01-17T15:10:40 IST" duration-ms="2049" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:10:40 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:10:50 IST" duration-ms="9934" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["View All Rounder(Cricket) Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Player Position Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:10:50 IST" name="afterSuite" finished-at="2025-01-17T15:10:50 IST" duration-ms="387" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:10:50 IST" name="CreateDriver" finished-at="2025-01-17T15:10:52 IST" duration-ms="2275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:10:52 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:11:01 IST" duration-ms="8623" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Update All Rounder(Cricket) Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Player Position Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'user should able to see Cricket details updated message "Data Updated Successfully"' is undefined.
You can implement this step using the snippet(s) below:

@Then("user should able to see Cricket details updated message {string}")
public void user_should_able_to_see_cricket_details_updated_message(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'user should able to see Cricket details updated message "Data Updated Successfully"' is undefined.
You can implement this step using the snippet(s) below:

@Then("user should able to see Cricket details updated message {string}")
public void user_should_able_to_see_cricket_details_updated_message(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:136)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:132)
at Base.CutomizeTestNGCucmberRunner.runScenario(CutomizeTestNGCucmberRunner.java:25)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:11:01 IST" name="afterSuite" finished-at="2025-01-17T15:11:01 IST" duration-ms="172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:11:01 IST" name="CreateDriver" finished-at="2025-01-17T15:11:03 IST" duration-ms="1966" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:11:03 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:11:10 IST" duration-ms="7219" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validation error for invalid player numbers"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Player Position Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'user update Maximum player "0"' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("user update Maximum player {string}")
public void user_update_maximum_player(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("user should see an max player should greater than minimum error message {string}")
public void user_should_see_an_max_player_should_greater_than_minimum_error_message(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'user update Maximum player "0"' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("user update Maximum player {string}")
public void user_update_maximum_player(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("user should see an max player should greater than minimum error message {string}")
public void user_should_see_an_max_player_should_greater_than_minimum_error_message(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:136)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:132)
at Base.CutomizeTestNGCucmberRunner.runScenario(CutomizeTestNGCucmberRunner.java:25)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:11:10 IST" name="afterSuite" finished-at="2025-01-17T15:11:10 IST" duration-ms="183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:11:10 IST" name="CreateDriver" finished-at="2025-01-17T15:11:12 IST" duration-ms="1823" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:11:12 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:11:19 IST" duration-ms="7122" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Filter operation"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Player Position Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:11:19 IST" name="afterSuite" finished-at="2025-01-17T15:11:20 IST" duration-ms="188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:11:20 IST" name="CreateDriver" finished-at="2025-01-17T15:11:22 IST" duration-ms="2092" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:11:22 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:11:29 IST" duration-ms="7572" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["View Sports Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Sports Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:11:29 IST" name="afterSuite" finished-at="2025-01-17T15:11:29 IST" duration-ms="190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:11:29 IST" name="CreateDriver" finished-at="2025-01-17T15:11:31 IST" duration-ms="1908" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:11:31 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:11:40 IST" duration-ms="8399" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Update Sports Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Sports Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'User Should able to see sports updated "Data Updated Successfully" message' is undefined.
You can implement this step using the snippet(s) below:

@Then("User Should able to see sports updated {string} message")
public void user_should_able_to_see_sports_updated_message(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'User Should able to see sports updated "Data Updated Successfully" message' is undefined.
You can implement this step using the snippet(s) below:

@Then("User Should able to see sports updated {string} message")
public void user_should_able_to_see_sports_updated_message(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:136)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:132)
at Base.CutomizeTestNGCucmberRunner.runScenario(CutomizeTestNGCucmberRunner.java:25)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:11:40 IST" name="afterSuite" finished-at="2025-01-17T15:11:40 IST" duration-ms="192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:11:40 IST" name="CreateDriver" finished-at="2025-01-17T15:11:42 IST" duration-ms="1843" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:11:42 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:11:49 IST" duration-ms="7706" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Filter Sports Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Sports Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: stale element not found in the current frame
  (Session info: chrome=131.0.6778.266)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Build info: version: '4.26.0', revision: '8ccf0219d7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [46be261ea910efbca5717e5b830523a1, getElementText {id=f.EDF4E35C8BBB331117AAC0038D03A1E7.d.1259495948AD32730DED64EC10FE309D.e.173}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.266, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\WINDOWS\TEMP\scoped_dir1...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51488}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51488/devtoo..., se:cdpVersion: 131.0.6778.266, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (46be261ea910efbca5717e5b830523a1)] -> tag name: table]
Session ID: 46be261ea910efbca5717e5b830523a1]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: stale element not found in the current frame
  (Session info: chrome=131.0.6778.266)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Build info: version: '4.26.0', revision: '8ccf0219d7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [46be261ea910efbca5717e5b830523a1, getElementText {id=f.EDF4E35C8BBB331117AAC0038D03A1E7.d.1259495948AD32730DED64EC10FE309D.e.173}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.266, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\WINDOWS\TEMP\scoped_dir1...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51488}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51488/devtoo..., se:cdpVersion: 131.0.6778.266, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (46be261ea910efbca5717e5b830523a1)] -> tag name: table]
Session ID: 46be261ea910efbca5717e5b830523a1
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.getText(RemoteWebElement.java:191)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy33.getText(Unknown Source)
at Pages.Master.SportsPage.getSportsFilteredData(SportsPage.java:74)
at stepDefinitions.Master.SportsSteps.user_should_able_to_filtered_sports_data(SportsSteps.java:135)
at ✽.User should able to filtered Sports data(file:///D:/automation/practice/src/test/resources/features/Master/Sports.feature:24)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:11:49 IST" name="afterSuite" finished-at="2025-01-17T15:11:50 IST" duration-ms="186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:11:50 IST" name="CreateDriver" finished-at="2025-01-17T15:11:51 IST" duration-ms="1716" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:11:51 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:11:59 IST" duration-ms="8104" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Publish sport"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Sports Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:11:59 IST" name="afterSuite" finished-at="2025-01-17T15:12:00 IST" duration-ms="217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:12:00 IST" name="CreateDriver" finished-at="2025-01-17T15:12:02 IST" duration-ms="2088" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:12:02 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:12:24 IST" duration-ms="21938" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add a video with valid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Videos Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//p[.="Data Added Successfully"]"}
  (Session info: chrome=131.0.6778.266)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.26.0', revision: '8ccf0219d7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [1ae1ef361d4278d7121d995c135345be, findElement {using=xpath, value=//p[.="Data Added Successfully"]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.266, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\WINDOWS\TEMP\scoped_dir2...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51547}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51547/devtoo..., se:cdpVersion: 131.0.6778.266, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 1ae1ef361d4278d7121d995c135345be]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[.="Data Added Successfully"]"}
  (Session info: chrome=131.0.6778.266)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.26.0', revision: '8ccf0219d7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [1ae1ef361d4278d7121d995c135345be, findElement {using=xpath, value=//p[.="Data Added Successfully"]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.266, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\WINDOWS\TEMP\scoped_dir2...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51547}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51547/devtoo..., se:cdpVersion: 131.0.6778.266, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 1ae1ef361d4278d7121d995c135345be
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy33.getText(Unknown Source)
at Pages.Master.VideosPage.videoSuccessMsg(VideosPage.java:109)
at stepDefinitions.Master.VideosSteps.a_success_message_should_be_displayed(VideosSteps.java:118)
at ✽.a success message "Data Added Successfully" should be displayed(file:///D:/automation/practice/src/test/resources/features/Master/Videos.feature:13)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:12:24 IST" name="afterSuite" finished-at="2025-01-17T15:12:24 IST" duration-ms="439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:12:24 IST" name="CreateDriver" finished-at="2025-01-17T15:12:27 IST" duration-ms="2552" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:12:27 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:12:41 IST" duration-ms="14367" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate mandatory fields"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Videos Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:12:41 IST" name="afterSuite" finished-at="2025-01-17T15:12:43 IST" duration-ms="1863" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:12:43 IST" name="CreateDriver" finished-at="2025-01-17T15:12:45 IST" duration-ms="1850" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:12:45 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:12:59 IST" duration-ms="14221" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Cancel adding a marketing category"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Videos Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:12:59 IST" name="afterSuite" finished-at="2025-01-17T15:12:59 IST" duration-ms="314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:12:59 IST" name="CreateDriver" finished-at="2025-01-17T15:13:01 IST" duration-ms="1876" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:13:01 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:13:16 IST" duration-ms="14532" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Test back button functionality"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Videos Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:13:16 IST" name="afterSuite" finished-at="2025-01-17T15:13:16 IST" duration-ms="233" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:13:16 IST" name="CreateDriver" finished-at="2025-01-17T15:13:18 IST" duration-ms="1818" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:13:18 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:13:40 IST" duration-ms="21713" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Prevent SQL injection in URL"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Videos Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//p[.="Invalid Url Passed"]"}
  (Session info: chrome=131.0.6778.266)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.26.0', revision: '8ccf0219d7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4b5a3e31823f4fdc3ada5572ebea16b5, findElement {using=xpath, value=//p[.="Invalid Url Passed"]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.266, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\WINDOWS\TEMP\scoped_dir4...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51669}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51669/devtoo..., se:cdpVersion: 131.0.6778.266, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4b5a3e31823f4fdc3ada5572ebea16b5]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[.="Invalid Url Passed"]"}
  (Session info: chrome=131.0.6778.266)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.26.0', revision: '8ccf0219d7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4b5a3e31823f4fdc3ada5572ebea16b5, findElement {using=xpath, value=//p[.="Invalid Url Passed"]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.266, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\WINDOWS\TEMP\scoped_dir4...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51669}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51669/devtoo..., se:cdpVersion: 131.0.6778.266, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4b5a3e31823f4fdc3ada5572ebea16b5
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy33.getText(Unknown Source)
at Pages.Master.VideosPage.videoURLInvalidMsg(VideosPage.java:123)
at stepDefinitions.Master.VideosSteps.an_error_video_url_message_should_be_displayed(VideosSteps.java:236)
at ✽.an error video URL message "Invalid URL Passed" should be displayed(file:///D:/automation/practice/src/test/resources/features/Master/Videos.feature:41)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:13:40 IST" name="afterSuite" finished-at="2025-01-17T15:13:40 IST" duration-ms="178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:13:40 IST" name="CreateDriver" finished-at="2025-01-17T15:13:42 IST" duration-ms="2207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:13:42 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:14:11 IST" duration-ms="28618" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate duplicate title entry"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Videos Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:14:11 IST" name="afterSuite" finished-at="2025-01-17T15:14:11 IST" duration-ms="203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:14:11 IST" name="CreateDriver" finished-at="2025-01-17T15:14:13 IST" duration-ms="1804" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:14:13 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:14:20 IST" duration-ms="7937" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Update Videos Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Videos Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:14:20 IST" name="afterSuite" finished-at="2025-01-17T15:14:21 IST" duration-ms="187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:14:21 IST" name="CreateDriver" finished-at="2025-01-17T15:14:22 IST" duration-ms="1817" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:14:22 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:14:29 IST" duration-ms="6644" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["View Videos Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Videos Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:14:29 IST" name="afterSuite" finished-at="2025-01-17T15:14:29 IST" duration-ms="175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:14:29 IST" name="CreateDriver" finished-at="2025-01-17T15:14:31 IST" duration-ms="1945" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:14:31 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:14:38 IST" duration-ms="7037" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Filter Videos Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Videos Module Operations in Master Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:14:38 IST" name="afterSuite" finished-at="2025-01-17T15:14:38 IST" duration-ms="193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:14:38 IST" name="CreateDriver" finished-at="2025-01-17T15:14:40 IST" duration-ms="1886" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:14:40 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:14:53 IST" duration-ms="12380" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["View Staff Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Staff Module Operations in Staff Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:14:53 IST" name="afterSuite" finished-at="2025-01-17T15:14:53 IST" duration-ms="285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:14:53 IST" name="CreateDriver" finished-at="2025-01-17T15:14:55 IST" duration-ms="1944" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:14:55 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:15:29 IST" duration-ms="34145" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Update Staff Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Staff Module Operations in Staff Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:15:29 IST" name="afterSuite" finished-at="2025-01-17T15:15:29 IST" duration-ms="245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:15:29 IST" name="CreateDriver" finished-at="2025-01-17T15:15:31 IST" duration-ms="1839" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:15:31 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:15:54 IST" duration-ms="22771" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Cancel Updated Staff Details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Staff Module Operations in Staff Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:15:54 IST" name="afterSuite" finished-at="2025-01-17T15:15:54 IST" duration-ms="186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:15:54 IST" name="CreateDriver" finished-at="2025-01-17T15:15:56 IST" duration-ms="1832" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:15:56 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:16:07 IST" duration-ms="10530" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Successfully change password with matching new and confirm passwords"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Staff Module Operations in Staff Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:16:07 IST" name="afterSuite" finished-at="2025-01-17T15:16:07 IST" duration-ms="214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:16:07 IST" name="CreateDriver" finished-at="2025-01-17T15:16:08 IST" duration-ms="1782" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:16:08 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:16:19 IST" duration-ms="10017" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["New password and confirm password do not match"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Staff Module Operations in Staff Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:16:19 IST" name="afterSuite" finished-at="2025-01-17T15:16:19 IST" duration-ms="220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:16:19 IST" name="CreateDriver" finished-at="2025-01-17T15:16:21 IST" duration-ms="1781" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:16:21 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:16:31 IST" duration-ms="10115" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Change password with a weak new password"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Staff Module Operations in Staff Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:16:31 IST" name="afterSuite" finished-at="2025-01-17T15:16:31 IST" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:16:31 IST" name="CreateDriver" finished-at="2025-01-17T15:16:33 IST" duration-ms="1768" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:16:33 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:16:43 IST" duration-ms="10401" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Change password with empty new password field"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Staff Module Operations in Staff Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:16:43 IST" name="afterSuite" finished-at="2025-01-17T15:16:45 IST" duration-ms="1763" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:16:45 IST" name="CreateDriver" finished-at="2025-01-17T15:16:47 IST" duration-ms="1974" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:16:47 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:17:01 IST" duration-ms="14523" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Cancel password change"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Staff Module Operations in Staff Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:17:01 IST" name="afterSuite" finished-at="2025-01-17T15:17:01 IST" duration-ms="208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:17:01 IST" name="CreateDriver" finished-at="2025-01-17T15:17:03 IST" duration-ms="1831" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:17:03 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:17:30 IST" duration-ms="26234" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add staff user with valid details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Staff Module Operations in Staff Module"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//p[.="Data Added Successfully"]"}
  (Session info: chrome=131.0.6778.266)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.26.0', revision: '8ccf0219d7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [7dd9ea5046deffadca0660d6710aa7b1, findElement {using=xpath, value=//p[.="Data Added Successfully"]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.266, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\WINDOWS\TEMP\scoped_dir1...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:52015}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:52015/devtoo..., se:cdpVersion: 131.0.6778.266, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7dd9ea5046deffadca0660d6710aa7b1]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[.="Data Added Successfully"]"}
  (Session info: chrome=131.0.6778.266)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.26.0', revision: '8ccf0219d7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [7dd9ea5046deffadca0660d6710aa7b1, findElement {using=xpath, value=//p[.="Data Added Successfully"]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.266, chrome: {chromedriverVersion: 131.0.6778.264 (2d05e315153..., userDataDir: C:\WINDOWS\TEMP\scoped_dir1...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:52015}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:52015/devtoo..., se:cdpVersion: 131.0.6778.266, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7dd9ea5046deffadca0660d6710aa7b1
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy33.getText(Unknown Source)
at Pages.Staff.ManageStaffPage.addStaffMsg(ManageStaffPage.java:312)
at stepDefinitions.Staff.ManageStaffSteps.user_should_able_to_see_message(ManageStaffSteps.java:460)
at ✽.User should able to see "Data Added Successfully" message(file:///D:/automation/practice/src/test/resources/features/Staff/ManageStaffView.feature:82)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:17:30 IST" name="afterSuite" finished-at="2025-01-17T15:17:30 IST" duration-ms="167" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:17:30 IST" name="CreateDriver" finished-at="2025-01-17T15:17:32 IST" duration-ms="2005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:17:32 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:17:44 IST" duration-ms="12591" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate mandatory fields"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Staff Module Operations in Staff Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:17:44 IST" name="afterSuite" finished-at="2025-01-17T15:17:46 IST" duration-ms="1770" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:17:46 IST" name="CreateDriver" finished-at="2025-01-17T15:17:48 IST" duration-ms="1975" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:17:48 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:18:04 IST" duration-ms="16260" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate invalid email format"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Staff Module Operations in Staff Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:18:04 IST" name="afterSuite" finished-at="2025-01-17T15:18:05 IST" duration-ms="213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:18:05 IST" name="CreateDriver" finished-at="2025-01-17T15:18:06 IST" duration-ms="1845" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:18:06 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:18:25 IST" duration-ms="18675" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate password masking and toggle"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Staff Module Operations in Staff Module"]]>
              </value>
            </param>
          </params>
          <exception class="org.junit.ComparisonFailure">
            <message>
              <![CDATA[text expected:<[text]> but was:<[Password field is not displaying input.]>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.junit.ComparisonFailure: text expected:<[text]> but was:<[Password field is not displaying input.]>
at org.junit.Assert.assertEquals(Assert.java:117)
at stepDefinitions.Staff.ManageStaffSteps.the_password_field_should_display_the_input(ManageStaffSteps.java:575)
at ✽.The Password field should display the input(file:///D:/automation/practice/src/test/resources/features/Staff/ManageStaffView.feature:113)
]]>
            </full-stacktrace>
          </exception> <!-- org.junit.ComparisonFailure -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:18:25 IST" name="afterSuite" finished-at="2025-01-17T15:18:25 IST" duration-ms="208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:18:25 IST" name="CreateDriver" finished-at="2025-01-17T15:18:27 IST" duration-ms="1775" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:18:27 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:18:44 IST" duration-ms="16894" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Test cancel button functionality"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Staff Module Operations in Staff Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:18:44 IST" name="afterSuite" finished-at="2025-01-17T15:18:44 IST" duration-ms="212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:18:44 IST" name="CreateDriver" finished-at="2025-01-17T15:18:46 IST" duration-ms="1763" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:18:46 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:19:02 IST" duration-ms="16147" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate duplicate phone entry"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Staff Module Operations in Staff Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:19:02 IST" name="afterSuite" finished-at="2025-01-17T15:19:04 IST" duration-ms="1767" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:19:04 IST" name="CreateDriver" finished-at="2025-01-17T15:19:06 IST" duration-ms="1845" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:19:06 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:19:19 IST" duration-ms="12975" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate unselected role"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Staff Module Operations in Staff Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:19:19 IST" name="afterSuite" finished-at="2025-01-17T15:19:20 IST" duration-ms="1821" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:19:20 IST" name="CreateDriver" finished-at="2025-01-17T15:19:22 IST" duration-ms="1953" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:19:22 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:19:33 IST" duration-ms="10866" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate special characters in name fields"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Staff Module Operations in Staff Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:19:33 IST" name="afterSuite" finished-at="2025-01-17T15:19:33 IST" duration-ms="181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:19:33 IST" name="CreateDriver" finished-at="2025-01-17T15:19:36 IST" duration-ms="2098" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:19:36 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:19:49 IST" duration-ms="13256" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Test back button functionality"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Staff Module Operations in Staff Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:19:49 IST" name="afterSuite" finished-at="2025-01-17T15:19:49 IST" duration-ms="227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:19:49 IST" name="CreateDriver" finished-at="2025-01-17T15:19:51 IST" duration-ms="1887" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:19:51 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:20:13 IST" duration-ms="21990" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Test Filter functionality"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage Staff Module Operations in Staff Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:20:13 IST" name="afterSuite" finished-at="2025-01-17T15:20:13 IST" duration-ms="180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:20:13 IST" name="CreateDriver" finished-at="2025-01-17T15:20:15 IST" duration-ms="1848" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:20:15 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-17T15:20:28 IST" duration-ms="12704" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Filter users and verify the filtered data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Management Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Actual data does not match expected data!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Actual data does not match expected data!
at stepDefinitions.UserManagement.UserManagementSteps.user_should_see_filtered_data_displayed_in_the_table(UserManagementSteps.java:137)
at ✽.User should see filtered data displayed in the table(file:///D:/automation/practice/src/test/resources/features/UserMgmt/UserManagement.feature:26)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:20:28 IST" name="afterSuite" finished-at="2025-01-17T15:20:28 IST" duration-ms="219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Runner.testRunner@557caf28]" started-at="2025-01-17T15:20:28 IST" name="tearDownClass" finished-at="2025-01-17T15:26:01 IST" duration-ms="332674" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- Runner.testRunner -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
