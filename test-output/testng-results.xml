<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="2" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-23T18:42:50 IST" name="Default suite" finished-at="2025-01-23T18:43:44 IST" duration-ms="53936">
    <groups>
      <group name="cucumber">
        <method signature="CutomizeTestNGCucmberRunner.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@77f1baf5]" name="runScenario" class="Base.CutomizeTestNGCucmberRunner"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2025-01-23T18:42:50 IST" name="Default test" finished-at="2025-01-23T18:43:44 IST" duration-ms="53936">
      <class name="Runner.testRunner">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:Runner.testRunner@77f1baf5]" started-at="2025-01-23T18:42:50 IST" name="setUpClass" finished-at="2025-01-23T18:42:51 IST" duration-ms="1042" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@77f1baf5]" started-at="2025-01-23T18:42:51 IST" name="CreateDriver" finished-at="2025-01-23T18:42:57 IST" duration-ms="6187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@77f1baf5]" started-at="2025-01-23T18:42:57 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-23T18:43:13 IST" duration-ms="16404" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Filter Completed match details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Fixture Module Operations in DFS Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@77f1baf5]" started-at="2025-01-23T18:43:13 IST" name="afterSuite" finished-at="2025-01-23T18:43:14 IST" duration-ms="236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="CreateDriver()[pri:0, instance:Runner.testRunner@77f1baf5]" started-at="2025-01-23T18:43:14 IST" name="CreateDriver" finished-at="2025-01-23T18:43:19 IST" duration-ms="5620" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateDriver -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.testRunner@77f1baf5]" started-at="2025-01-23T18:43:19 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-01-23T18:43:38 IST" duration-ms="19296" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Statistics validation"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Fixture Module Operations in DFS Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Runner.testRunner@77f1baf5]" started-at="2025-01-23T18:43:38 IST" name="afterSuite" finished-at="2025-01-23T18:43:39 IST" duration-ms="216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Runner.testRunner@77f1baf5]" started-at="2025-01-23T18:43:39 IST" name="tearDownClass" finished-at="2025-01-23T18:43:44 IST" duration-ms="4890" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- Runner.testRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
